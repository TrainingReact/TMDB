[{"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\index.js":"1","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\App.js":"2","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\reportWebVitals.js":"3","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\genericComponents\\Footer.js":"4","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\genericComponents\\Header.js":"5","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\genericComponents\\Menu.js":"6","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\Home.js":"7","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\Film.js":"8","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\Tvseries.js":"9","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\genericComponents\\Carousel.js":"10","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\movies\\constants\\constants.js":"11","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\movies\\api\\utils.js":"12","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\film.js":"13","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\tvseries.js":"14","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\home.js":"15"},{"size":684,"mtime":1617979957735,"results":"16","hashOfConfig":"17"},{"size":344,"mtime":1617980796079,"results":"18","hashOfConfig":"17"},{"size":377,"mtime":1617979957741,"results":"19","hashOfConfig":"17"},{"size":483,"mtime":1617976184629,"results":"20","hashOfConfig":"17"},{"size":511,"mtime":1617980796081,"results":"21","hashOfConfig":"17"},{"size":4489,"mtime":1617981725232,"results":"22","hashOfConfig":"17"},{"size":2107,"mtime":1617983752698,"results":"23","hashOfConfig":"17"},{"size":746,"mtime":1617983492621,"results":"24","hashOfConfig":"17"},{"size":754,"mtime":1617981678454,"results":"25","hashOfConfig":"17"},{"size":7325,"mtime":1617980796080,"results":"26","hashOfConfig":"17"},{"size":1483,"mtime":1617980796085,"results":"27","hashOfConfig":"17"},{"size":5762,"mtime":1617980639579,"results":"28","hashOfConfig":"17"},{"size":746,"mtime":1617983492621,"results":"29","hashOfConfig":"17"},{"size":754,"mtime":1617981678454,"results":"30","hashOfConfig":"17"},{"size":2107,"mtime":1617983752698,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rp7ijg",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\index.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\App.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\reportWebVitals.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\genericComponents\\Footer.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\genericComponents\\Header.js",["64","65"],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\genericComponents\\Menu.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\Home.js",["66","67","68","69","70"],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\Film.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\Tvseries.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\genericComponents\\Carousel.js",[],["71","72"],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\movies\\constants\\constants.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\movies\\api\\utils.js",["73"],"import { useEffect, useState } from \"react\";\r\nimport ActionsButtons from \"../../genericComponents/Carousel\";\r\n\r\n//getData function take data and add genre\r\n//params: data(string), genres(string)\r\n//returns: array\r\nexport default async function getData(data, genres) {\r\n  try {\r\n    let movieData = await fetch(data);\r\n    movieData = await movieData.json();\r\n    let genre = await fetch(genres);\r\n    genre = await genre.json();\r\n    const newDataWithGenreAdd = joinGenreinData({\r\n      genre: genre,\r\n      data: movieData,\r\n    });\r\n    const dataReadyTVSForGenres = dataSettingForCarousel(newDataWithGenreAdd);\r\n    return dataReadyTVSForGenres;\r\n  } catch (error) {\r\n    console.log(\"Something went wrong:   \", error);\r\n  }\r\n}\r\n\r\n//getSingleData function take data from a given url\r\n//params: data(string)\r\n//returns: object\r\nexport async function getSingleData(data) {\r\n  try {\r\n    let movieData = await fetch(data);\r\n    movieData = await movieData.json();\r\n    return movieData;\r\n  } catch (error) {\r\n    console.log(\"Something went wrong:   \", error);\r\n  }\r\n}\r\n\r\n//dataSettingForCarousel function adds index for carousel (see ActionsButtons in GenericComponent for more details)\r\n//params: data(array)\r\n//returns: object\r\nexport function dataSettingForCarousel(data) {\r\n  let arrayModifiedForCarousel = data.map((elem) => {\r\n    return {\r\n      ...elem,\r\n      index: data.indexOf(elem),\r\n    };\r\n  });\r\n  return arrayModifiedForCarousel;\r\n}\r\n\r\n//joinGenreinData function allows to join name genre with id genre data film\r\n//params: data(object)\r\n//returns: object\r\nexport function joinGenreinData(data) {\r\n  let genreResponse = Object.values(data.genre);\r\n  let genreArrayTrasform = [];\r\n  genreResponse.forEach(function (el) {\r\n    genreArrayTrasform = Object.values(el);\r\n  });\r\n\r\n  //copy top rated data parameter to manipulate it with array functions\r\n  let takeResults = data.data.results;\r\n\r\n  //for each film we want to associate the movie's genre_ids with the genre's name.\r\n  //NB. Each film could have more genres to show. This code manage this situation.\r\n  takeResults.forEach(function (item) {\r\n    let result = [];\r\n    for (let w = 0; w < sizeObj(item.genre_ids); w++) {\r\n      result[w] = genreArrayTrasform.filter(function (genElem) {\r\n        return genElem.id === item.genre_ids[w];\r\n      });\r\n    }\r\n    //now genres is added\r\n    let createCompositionOfGenres = [];\r\n    for (let w = 0; w < sizeObj(item.genre_ids); w++) {\r\n      createCompositionOfGenres.push(result[w].length !== 0 && result[w][0] !== undefined ? result[w][0].name + \"  \" : \" \");\r\n    }\r\n    item.genres = createCompositionOfGenres;\r\n  });\r\n  return takeResults;\r\n}\r\n\r\n//sizeObj function is necessary to know the number of objects in movie's genres_id array dimension\r\n//params: obj(object)\r\n//returns: integer\r\nexport function sizeObj(obj) {\r\n  var size = 0,\r\n    key;\r\n  for (key in obj) {\r\n    if (obj.hasOwnProperty(key)) size++;\r\n  }\r\n  return size;\r\n}\r\n\r\n//useDataToState personalized hook. It takes in input urls and it returns data\r\n//params: urlList(object)\r\n//returns: data(array)\r\nexport function useDataToState(urlList) {\r\n  const movie = urlList.movie;\r\n  const genre = urlList.genre;\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const result = getData(movie, genre);\r\n    result\r\n      .then((elem) => {\r\n        setData(elem);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Something went wrong:   \", error);\r\n      });\r\n  }, [movie, genre, setData]);\r\n  return data;\r\n}\r\n\r\n//SetDataCategoryForCarousel component allows to manage the carousel view in case of different urls\r\n//params: props: url(string), genres(string), key(integer), title(string)\r\n//components: ActionsButtons\r\nexport function SetDataCategoryForCarousel(props) {\r\n  const url = props.movie;\r\n  const genres = props.genre;\r\n  const key = props.ident;\r\n  const title = props.title;\r\n  const [dataState, setDataState] = useState([]);\r\n  let bool = false;\r\n  useEffect(() => {\r\n    const result = getData(url, genres);\r\n    result\r\n      .then((elem) => {\r\n        setDataState(elem);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Something went wrong:   \", error);\r\n      });\r\n  }, [url, genres, key]);\r\n\r\n  bool = true ? dataState && dataState.length : (bool = false);\r\n\r\n  return bool ? (\r\n    <span>\r\n      <h3>{title}</h3>\r\n      <hr></hr>\r\n      <ActionsButtons data={dataState} />\r\n    </span>\r\n  ) : null;\r\n}\r\n\r\n//ManageDynamicUrlForCarousel component manages an urls array to allow to show data in carousel\r\n//params: props: arrayUrls(array), genres(string)\r\n//components: SetDataCategoryForCarousel\r\nexport function ManageDynamicUrlForCarousel(props) {\r\n  const arrayUrls = props.arrayUrl;\r\n  const genreUrl = props.genreUrl;\r\n  const items = Object.entries(arrayUrls).map(([key, value]) => {\r\n    return (\r\n      <span key={key}>\r\n        <SetDataCategoryForCarousel ident={key} movie={value.url} genre={genreUrl} title={value.name} />\r\n      </span>\r\n    );\r\n  });\r\n  return <span>{items}</span>;\r\n}\r\n\r\n//useConstructArrayForDynamicUrls personalized hook. It takes in input urls and it returns an url array\r\n//params: urlList(object)\r\n//returns: data(array)\r\nexport function useConstructArrayForDynamicUrls(urlList) {\r\n  const genreUrl = urlList.genre;\r\n  const searchFilmUrl = urlList.searchFilm;\r\n  const [data, setData] = useState([]);\r\n\r\n  let urlArray = [];\r\n  useEffect(() => {\r\n    const getGenre = getSingleData(genreUrl);\r\n    getGenre.then((resp) => {\r\n      for (let i = 0; i < sizeObj(resp.genres); i++) {\r\n        urlArray.push({ url: searchFilmUrl + resp.genres[i].id, name: resp.genres[i].name });\r\n      }\r\n      setData(urlArray);\r\n    });\r\n  }, [genreUrl, searchFilmUrl, setData]);\r\n  return data;\r\n}\r\n","C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\film.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\tvseries.js",[],"C:\\Users\\ValentinaD'Orazio\\Desktop\\TMDB\\TMDB\\src\\pageComponents\\home.js",[],{"ruleId":"74","severity":1,"message":"75","line":8,"column":9,"nodeType":"76","endLine":8,"endColumn":54},{"ruleId":"74","severity":1,"message":"75","line":11,"column":9,"nodeType":"76","endLine":11,"endColumn":55},{"ruleId":"77","severity":1,"message":"78","line":1,"column":58,"nodeType":"79","messageId":"80","endLine":1,"endColumn":75},{"ruleId":"77","severity":1,"message":"81","line":3,"column":26,"nodeType":"79","messageId":"80","endLine":3,"endColumn":39},{"ruleId":"77","severity":1,"message":"82","line":4,"column":36,"nodeType":"79","messageId":"80","endLine":4,"endColumn":41},{"ruleId":"77","severity":1,"message":"83","line":28,"column":11,"nodeType":"79","messageId":"80","endLine":28,"endColumn":20},{"ruleId":"74","severity":1,"message":"75","line":47,"column":9,"nodeType":"76","endLine":47,"endColumn":53},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":180,"column":6,"nodeType":"90","endLine":180,"endColumn":40,"suggestions":"91"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'getLatestMovieUrl' is defined but never used.","Identifier","unusedVar","'getSingleData' is defined but never used.","'Modal' is defined but never used.","'isShowing' is assigned a value but never used.","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlArray'. Either include it or remove the dependency array.","ArrayExpression",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [genreUrl, searchFilmUrl, setData, urlArray]",{"range":"97","text":"98"},[5705,5739],"[genreUrl, searchFilmUrl, setData, urlArray]"]